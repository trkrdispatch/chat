<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple Chat</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        .container {
            display: flex;
            gap: 20px;
        }
        .chat-section {
            flex: 1;
        }
        .messages-section {
            flex: 1;
        }
        #join-form, #chat-form {
            margin-bottom: 20px;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        #messages {
            height: 400px;
            border: 1px solid #ccc;
            overflow-y: auto;
            padding: 10px;
            margin-bottom: 20px;
        }
        .message {
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 15px;
            max-width: 70%;
            clear: both;
            position: relative;
            word-wrap: break-word;
        }
        .user-info {
            font-weight: bold;
            font-size: 0.8em;
            margin-bottom: 5px;
            color: #666;
        }
        .message-content {
            display: inline-block;
        }
        .timestamp {
            font-size: 0.7em;
            color: #999;
            margin-top: 5px;
            display: block;
        }
        .message-left {
            float: left;
            background-color: #f1f0f0;
            color: #333;
            text-align: left;
            border-top-left-radius: 5px;
        }
        .message-right {
            float: right;
            background-color: #dcf8c6;
            color: #000;
            text-align: right;
            border-top-right-radius: 5px;
        }
        .system-message {
            background-color: #f0f0f0;
            text-align: center;
            font-style: italic;
            margin: 10px auto;
            padding: 5px 10px;
            border-radius: 10px;
            max-width: 80%;
            clear: both;
        }
        input[type="text"] {
            padding: 8px;
            margin: 5px 0;
            width: 200px;
        }
        button {
            padding: 8px 15px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
            margin: 5px;
        }
        button:hover {
            background-color: #45a049;
        }
        #chat-interface {
            display: none;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f5f5f5;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .refresh-button {
            margin-bottom: 10px;
        }
        #current-user {
            position: fixed;
            top: 10px;
            right: 20px;
            background-color: #4CAF50;
            color: white;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.9em;
        }
    </style>
</head>
<body>
    <div id="join-form">
        <h2>Join Chat</h2>
        <input type="text" id="username" placeholder="Enter your username" required onkeypress="handleUsernameKeyPress(event)">
        <button onclick="joinChat()">Join</button>
    </div>

    <div id="chat-interface">
        <div id="current-user"></div>
        <div class="container">
            <div class="chat-section">
                <h2>Chat</h2>
                <div id="messages"></div>
                <div id="chat-form">
                    <input type="text" id="message" placeholder="Type your message..." required onkeypress="handleMessageKeyPress(event)">
                    <button onclick="sendMessage()">Send</button>
                </div>
            </div>
            <div class="messages-section">
                <h2>Message History</h2>
                <button class="refresh-button" onclick="refreshMessages()">Refresh</button>
                <table id="messages-table">
                    <thead>
                        <tr>
                            <th>Time</th>
                            <th>User</th>
                            <th>Message</th>
                        </tr>
                    </thead>
                    <tbody id="messages-body">
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        let currentUser = '';

        function handleUsernameKeyPress(event) {
            if (event.key === 'Enter') {
                joinChat();
            }
        }

        function handleMessageKeyPress(event) {
            if (event.key === 'Enter') {
                sendMessage();
            }
        }

        function joinChat() {
            const username = document.getElementById('username').value;
            if (username) {
                currentUser = username;
                socket.emit('join', username);
                document.getElementById('join-form').style.display = 'none';
                document.getElementById('chat-interface').style.display = 'block';
                document.getElementById('current-user').textContent = `Logged in as: ${username}`;
                refreshMessages();
            }
        }

        async function refreshMessages() {
            try {
                console.log('Fetching messages...');
                const response = await fetch('/messages');
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const messages = await response.json();
                console.log('Received messages:', messages);
                
                const tbody = document.getElementById('messages-body');
                tbody.innerHTML = '';
                
                if (Array.isArray(messages)) {
                    messages.forEach(msg => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${new Date(msg.timestamp).toLocaleString()}</td>
                            <td>${msg.username}</td>
                            <td>${msg.message}</td>
                        `;
                        tbody.appendChild(row);
                    });

                    // Also update the chat messages view
                    const messagesDiv = document.getElementById('messages');
                    messagesDiv.innerHTML = ''; // Clear current messages
                    
                    // Add messages in chronological order (oldest first)
                    messages.slice().reverse().forEach(msg => {
                        const isCurrentUser = msg.username === currentUser;
                        const messageClass = isCurrentUser ? 'message-right' : 'message-left';
                        
                        const messageElement = document.createElement('div');
                        messageElement.className = `message ${messageClass}`;
                        
                        messageElement.innerHTML = `
                            ${!isCurrentUser ? `<div class="user-info">${msg.username}</div>` : ''}
                            <div class="message-content">${msg.message}</div>
                            <span class="timestamp">${new Date(msg.timestamp).toLocaleString()}</span>
                        `;
                        
                        messagesDiv.appendChild(messageElement);
                    });
                    
                    messagesDiv.scrollTop = messagesDiv.scrollHeight;
                } else {
                    console.error('Messages is not an array:', messages);
                }
            } catch (error) {
                console.error('Error fetching messages:', error);
                const tbody = document.getElementById('messages-body');
                tbody.innerHTML = '<tr><td colspan="3">Error loading messages. Please try again.</td></tr>';
            }
        }

        function sendMessage() {
            const message = document.getElementById('message').value;
            if (message) {
                console.log('Sending message:', message);
                socket.emit('send_message', message);
                document.getElementById('message').value = '';
            }
        }

        function appendMessage(data, type = 'message') {
            if (type === 'system-message') {
                const messagesDiv = document.getElementById('messages');
                const messageElement = document.createElement('div');
                messageElement.className = `message ${type}`;
                messageElement.textContent = data;
                messagesDiv.appendChild(messageElement);
                messagesDiv.scrollTop = messagesDiv.scrollHeight;
                return;
            }
            
            const isCurrentUser = data.username === currentUser;
            const messageClass = isCurrentUser ? 'message-right' : 'message-left';
            
            const messagesDiv = document.getElementById('messages');
            const messageElement = document.createElement('div');
            messageElement.className = `message ${messageClass}`;
            
            messageElement.innerHTML = `
                ${!isCurrentUser ? `<div class="user-info">${data.username}</div>` : ''}
                <div class="message-content">${data.message}</div>
                <span class="timestamp">${new Date(data.timestamp).toLocaleString()}</span>
            `;
            
            messagesDiv.appendChild(messageElement);
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }

        socket.on('message', (data) => {
            console.log('Received message:', data);
            appendMessage(data);
            refreshMessages();
        });

        socket.on('refresh_messages', () => {
            console.log('Received refresh_messages event');
            refreshMessages();
        });

        socket.on('user_joined', (username) => {
            appendMessage(`${username} joined the chat`, 'system-message');
        });

        socket.on('user_left', (username) => {
            appendMessage(`${username} left the chat`, 'system-message');
        });

        socket.on('error', (data) => {
            alert(data.message);
        });
    </script>
</body>
</html> 